{
	"name": "employee_union_transformation",
	"properties": {
		"folder": {
			"name": "Basic Transformations"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "IT30",
						"type": "DatasetReference"
					},
					"name": "IT30"
				},
				{
					"dataset": {
						"referenceName": "IT50",
						"type": "DatasetReference"
					},
					"name": "IT50"
				},
				{
					"dataset": {
						"referenceName": "IT60",
						"type": "DatasetReference"
					},
					"name": "IT60"
				},
				{
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "popstateoutput",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as string,",
				"          COMMISSION_PCT as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IT30",
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as string,",
				"          COMMISSION_PCT as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IT50",
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as string,",
				"          COMMISSION_PCT as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> IT60",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false) ~> source1",
				"IT30, IT50, IT60 union(byName: true)~> union1",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Year as string,",
				"          MoviesCount as string",
				"     ),",
				"     partitionFileNames:['employee_union_output'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}